<Application
    x:Class="Grombcross.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:Grombcross.Views.Components"
    xmlns:converters="clr-namespace:Grombcross.Converters"
    xmlns:local="clr-namespace:Grombcross"
    x:Name="Grombcross">
    <Application.Resources>
        <!--<SoundPlayerAction x:Key="PlacedBlock"/>-->

        <converters:PuzzleSizeToScaleConverter x:Key="PuzzleSizeToScaleConverter" />
        <converters:BlockStateToButtonStyleConverter x:Key="BlockToButtonStyleConverter" />
        <converters:BlockStateToQuestionVisibilityConverter x:Key="BlockToQuestionVisibilityConverter" />
        <converters:BlockStateToXVisibilityConverter x:Key="BlockToXVisibilityConverter" />
        <converters:LineSolvedToBrushColorConverter x:Key="LineSolvedToBrushColorConverter" />
        <converters:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter" />
        <converters:SizeIntToDimensionsStringConverter x:Key="SizeIntToDimensionsStringConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
        <converters:BrushToDarkerBrushConverter x:Key="BrushToDarkerBrushConverter" />

        <Style x:Key="BouncyButtonBehavior" TargetType="Button">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BlockButton" TargetType="Button">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="0.2"
                            CornerRadius="0.4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers />
                                </Style>
                            </Border.Style>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="MouseOverStoryBoardEnter" />
                                    <StopStoryboard BeginStoryboardName="MouseOverStoryBoardExit" />
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="0.9"
                                                Duration="0:0:0.01">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="0.9"
                                                Duration="0:0:0.01">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1.00"
                                                Duration="0:0:0.05">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1.00"
                                                Duration="0:0:0.05">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <!--<Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.85" ScaleY="0.85" />
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Name="MouseOverStoryBoardEnter">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1.08"
                                                Duration="0:0:0.05">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1.08"
                                                Duration="0:0:0.05">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Name="MouseOverStoryBoardExit">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1.00"
                                                Duration="0:0:0.05" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1.00"
                                                Duration="0:0:0.05" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <!--<Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.075" ScaleY="1.025" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.75" ScaleY="0.93" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!--  Control colors.  -->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--  Border colors  -->
        <Color x:Key="BorderLightColor">Blue</Color>
        <Color x:Key="BorderMediumColor">Blue</Color>
        <Color x:Key="BorderDarkColor">Blue</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--  Control-specific resources.  -->
        <Color x:Key="HeaderTopColor">Blue</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Blue</Color>
        <Color x:Key="SliderTrackDarkColor">Blue</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>


        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Width="6"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track
                x:Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb
                        Background="#284727"
                        Opacity="0.5"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
            </Track>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
